name: Windows

on:
  workflow_call:
    inputs:
      qt-version:
        required: true
        type: string

  workflow_dispatch:

jobs:
  build_deploy:
    name: Build (${{ matrix.build-type }}, Qt ${{ matrix.qt-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            qt-version: ${{ inputs.qt-version }}
            build-type: Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: MinoruSekine/setup-scoop@v4.0.1
        with:
          buckets: extras
          apps: ninja cmake

      - name: Install Qt ${{ matrix.qt-version }} (aqtinstall)
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt-version }}
          cache: true
          arch: win64_mingw
          tools: 'tools_ifw tools_mingw tools_mingw90'
          modules: 'qtimageformats qtlocation qtnetworkauth qtwebsockets qtshadertools qtpositioning'
          aqtsource: 'git+https://github.com/miurahr/aqtinstall.git'
          host: windows
          target: desktop

      - name: Install FFmpeg
        id: install-ffmpeg
        run: |
          Invoke-WebRequest "https://github.com/yunag/YuRadio-deps/releases/download/2.0.0/windows-ffmpeg.zip" -OutFile "windows-ffmpeg.zip"
          Expand-Archive "windows-ffmpeg.zip" -DestinationPath "windows-ffmpeg" -Force

          echo "ffmpeg_install_location=$(pwd)/windows-ffmpeg" >> $ENV:GITHUB_OUTPUT

      - name: Build (${{ matrix.build-type }})
        run: |
          cmake --warn-uninitialized --warn-unused-vars `
              -S . `
              -B build -G Ninja `
              -DCMAKE_TOOLCHAIN_FILE=${{ env.QT_ROOT_DIR }}/lib/cmake/Qt6/qt.toolchain.cmake `
              -DCMAKE_PREFIX_PATH="${{ env.QT_ROOT_DIR }};${{ steps.install-ffmpeg.outputs.ffmpeg_install_location }}" `
              -DCMAKE_CXX_COMPILER="${{ env.IQTA_TOOLS }}/mingw1120_64/bin/g++.exe" `
              -DCMAKE_C_COMPILER="${{ env.IQTA_TOOLS }}/mingw1120_64/bin/gcc.exe" `
              -DSPOTIFY_CLIENTID="${{ secrets.SPOTIFY_CLIENTID }}" `
              -DSPOTIFY_CLIENTID_HASH="${{ secrets.SPOTIFY_CLIENTID_HASH}}" `
              -DSPOTIFY_SECRET="${{ secrets.SPOTIFY_SECRET}}" `
              -DSPOTIFY_SECRET_HASH="${{ secrets.SPOTIFY_SECRET_HASH }}" `
              -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
          cmake --build build --config ${{ matrix.build-type }} --target package

      - name: Remove CPack temporary files
        run: |
          Remove-Item -Verbose -Recurse -Force build/package/_CPack_Packages

      - name: Upload artifacts (${{ matrix.build-type }})
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: Windows-${{ matrix.build-type }}
          path: build/package
